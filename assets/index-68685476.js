import se from"./index-9eb8ef13.js";import{r as ae,h as I,j as E,B as ce,I as H,m as i,R as y,u as xe,K as re}from"./vue-e0e31f72.js";import{_ as le}from"./index-10e24cf3.js";/* empty css              */import"./arco-38a32e5c.js";function L(){return{packConfig:{value_0x00:0,value_0x01:1,value_0x02:2,value_0x03:3,value_0x04:4,value_0x05:5,value_0x08:8,CRC_ARRAY:[0,94,188,226,97,63,221,131,194,156,126,32,163,253,31,65,157,195,33,127,252,162,64,30,95,1,227,189,62,96,130,220,35,125,159,193,66,28,254,160,225,191,93,3,128,222,60,98,190,224,2,92,223,129,99,61,124,34,192,158,29,67,161,255,70,24,250,164,39,121,155,197,132,218,56,102,229,187,89,7,219,133,103,57,186,228,6,88,25,71,165,251,120,38,196,154,101,59,217,135,4,90,184,230,167,249,27,69,198,152,122,36,248,166,68,26,153,199,37,123,58,100,134,216,91,5,231,185,140,210,48,110,237,179,81,15,78,16,242,172,47,113,147,205,17,79,173,243,112,46,204,146,211,141,111,49,178,236,14,80,175,241,19,77,206,144,114,44,109,51,209,143,12,82,176,238,50,108,142,208,83,13,239,177,240,174,76,18,145,207,45,115,202,148,118,40,171,245,23,73,8,86,180,234,105,55,213,139,87,9,235,181,54,104,138,212,149,203,41,119,244,170,72,22,233,183,85,11,136,214,52,106,43,117,151,201,74,20,246,168,116,42,200,150,21,75,169,247,182,232,10,84,215,137,107,53],token:{CRPC_300SDKPACKAGEHEADFIRST:170,CRPC_300SDKPACKAGEHEADSECOND:85,CRPC_300SDKTokenQueryDeviceInfo:255,CRPC_300SDKTokenDeviceVersion:81,CRPC_300SDKTokenDeviceAboutToPowOff:208,CRPC_300SDKTokenBloodPressureAction:64,CRPC_300SDKTokenNIBPStatus:65,CRPC_300SDKTokenNIBPDatas:66,CRPC_300SDKTokenQueryLastBloodPressureResult:67,CRPC_300SDKTokenSpo2Action:80,CRPC_300SDKTokenSpo2WavePackage:82,CRPC_300SDKTokenSpo2ParamPackage:83,CRPC_300SDKTokenSpo2StatusPackage:84,CRPC_300SDKTokenBloodGlucoseAction:224,CRPC_300SDKTokenQueryForBloodGlucoseState:225,CRPC_300SDKTokenBloodGlucoseResult:226,CRPC_300SDKTokenSetGluDeviceType:227,CRPC_300SDKTokenQueryGluDeviceType:228,CRPC_300SDKTokenBodyTemperatureAction:112,CRPC_300SDKTokenBodyTemperatureStatus:113,CRPC_300SDKTokenQueryLastBodyTemperatureResult:114,CRPC_300SDKTokenBloodGlucoseResult2:115,CRPC_300SDKTokenActionForECGMessurement:48,CRPC_300SDKTokenQueryForECGVersionInfo:49,CRPC_300SDKTokenECGWaveData:50,CRPC_300SDKTokenECGResultData:51,CRPC_300SDKTokenECGGainData:52,CRPC_300SDKTokenQueryIAPVersion:240,CRPC_300SDKTokenStartUpdateIAP:241,CRPC_300SDKTokenInvalied:17}}}}function N(){const{packConfig:S}=L(),{value_0x00:o,value_0x01:r,value_0x02:c,value_0x03:x,value_0x04:f,value_0x05:h,value_0x08:_,CRC_ARRAY:m,token:u}=S,{CRPC_300SDKPACKAGEHEADFIRST:l,CRPC_300SDKPACKAGEHEADSECOND:d,CRPC_300SDKTokenQueryDeviceInfo:P,CRPC_300SDKTokenBloodPressureAction:k,CRPC_300SDKTokenQueryLastBloodPressureResult:b,CRPC_300SDKTokenSpo2Action:K,CRPC_300SDKTokenSpo2StatusPackage:R,CRPC_300SDKTokenSpo2WavePackage:p,CRPC_300SDKTokenSpo2ParamPackage:v,CRPC_300SDKTokenBodyTemperatureStatus:D,CRPC_300SDKTokenQueryLastBodyTemperatureResult:O}=u,A=[];for(const e in u)Object.hasOwnProperty.call(u,e)&&A.push(u[e]);function F(e){const n=parseInt(e.substr(2,2)),t=parseInt(e.substr(5,2)),s=parseInt(e.substr(8,2)),a=parseInt(e.substr(11,2)),C=parseInt(e.substr(14,2)),Q=parseInt(e.substr(17,2)),T=[l,d,P,_,x,n,t,s,a,C,Q,o];return T[11]=g(T,12),T}function z(){const t=[l,d,P,c,f,o];return t[5]=g(t,6),t}function W(){const t=[l,d,k,2,1,0];return t[5]=g(t,6),t}function M(){const t=[l,d,k,2,2,0];return t[5]=g(t,6),t}function $(){const t=[l,d,D,2,1,0];return t[5]=g(t,6),t}function j(){const t=[l,d,R,2,1,0];return t[5]=g(t,6),t}function g(e,n){let t=0,s=0;for(var a=0;a+1<n;a++)s=m[t^e[a]],t=s;return s}function J(e){let n=e[3];return e[n+3]==g(e,n+4)}function U(e,n){if(n.push(e.outQueue()),n[0]===l&&(n.push(e.outQueue()),n[1]===d&&(n.push(e.outQueue()),A.indexOf(n[2])>-1))){const t=e.outQueue();n.push(t),Y(e,n,t)}}function Y(e,n,t){for(let s=0;s<t;s++)n.push(e.outQueue());w(n)}function w(e){if(J(e))switch(e[2]){case P:B(e);break;case k:X(e);break;case b:Z(e);break;case D:q(e);break;case O:ee(e);break;case R:te(e);break;case p:ne(e);break;case v:oe(e);break}}function B(e){const n=e[5],t=e[6],s=e[7],a=e[8],C={soft:`${n>>4}.${n&15}.${t>>4}.${t&15}`,hard:`${s>>4}.${s&15}`,electricity:`${a&7}`}}function X(e){switch(e[4]){case 1:break;case 2:break}}function Z(e){switch(e[3]){case 7:{const n=e[5],t=e[6],s=e[7],a=e[8],C=n>>7&1,Q=(n&127)<<8|t;break}case 3:{const n=e[5],t=n>>7&1,s=n&7;let a="";switch(t){case 0:a={0:"测量不到有效脉搏",1:"7秒内打气不上30mmHg（气袋没有绑好）",2:"测量结果数值有误",3:"气袋压力超过295mmHg,进入超压保护",4:"干预过多",15:"表示电量过低，血压测量停止"}[s];break;case 1:a={1:"7 秒内打气不上 30mmHg（气袋没有绑好）",2:"气袋压力超过 295mmHg，进入超压保护",3:"测量不到有效脉搏",4:"干预过多，（测量中移动，说话等）",5:"测量结果数值有误",6:"漏气",7:"自检失败,可能是传感器或 A/D 采样出错",8:"气压错误,可能是阀门无法正常打开",9:"信号饱和,由于运动或其他原因使信号幅度太大",10:"在漏气检测中，发现系统气路漏气",11:"开机后，充气泵、A/D采样、压力传感器出错，或者软件运行中指针出错",12:"某次测量超过规定时间，成人袖带压超过200mmHg时为120秒，未超过时为90秒，新生儿为90秒",15:"电量过低，血压测量停止"}[s];break}break}}}function q(e){const n=e[5],t=e[6],s=e[7],a={status:{0:"测量结束",1:"模块忙或测量正在进行中",255:"测量模块故障或未接入"}[n],软件版本:Number(String(t.toString(16)))/100,硬件版本:Number(String(s.toString(16)))/100}}function ee(e){const n=e[5],t=e[6],s=e[7],a=`${n>>5&3}`,C=(t<<8|s)/100+30}function te(e){const n=e[5],t=e[6],s=e[7],a={status:{0:"测量结束",1:"模块忙或测量正在进行中",255:"测量模块故障或未接入"}[n],软件版本:Number(String(t.toString(16)))/100,硬件版本:Number(String(s.toString(16)))/100}}function ne(e){const n=e[3];e.splice(5,n-2).reduce((a,C)=>(C&&a.push({status:{1:"有搏动",0:"无搏动"}[C>>7&1],value:C&127}),a),[]).length}function oe(e){const n=e[5],t=e[7]<<8|e[6],s=e[8],a=e[9],C={spo2:n,pr:t,pi:s,status:a}}return{serialPorAnalyzer:U,setDeviceTime:F,getDeviceInfomation:z,getTemperatureStatus:$,getSpo2Status:j,startBloodPressureMeasurement:W,stopBloodPressureMeasurement:M,handleSerialPortData:w,analyzerHandleDeviceInfo:B}}class V extends Error{constructor(o){super(o)}}class G{constructor(){this.data=[]}joinQueue(o){this.data.push(...o)}outQueue(){if(this.isEmpty())throw new V("可读取数据列表为空");return this.data.shift()}getFirstItem(){return this.isEmpty()?null:this.data[0]}isEmpty(){return this.data.length===0}size(){return this.data.length}clear(){this.data=[]}}class ue{constructor(o){const{contrastParams:r,handlePack:c,onConnect:x,onDisconnect:f,onFail:h}=o;this.contrastParams=r||{},this.handlePack=c||function(){},this.onConnect=x||function(){},this.onDisconnect=f||function(){},this.onFail=h||function(){},this.queue=new G,this.handleQueue=new G,this.serialPortWriter=null}async connect(){try{if("serial"in navigator){const o=await navigator.serial.requestPort();await o.open({baudRate:115200});const r=o.readable.getReader();this.serialPortWriter=o.writable.getWriter(),this.onConnect({label:"连接成功"});try{for(;;){const{value:c,done:x}=await r.read();if(x){r.releaseLock();break}const f=Array.from(c);this.queue.joinQueue(f);try{this._callback(this.queue)}catch{}}}catch{}finally{this.onDisconnect({label:"断开连接"});try{await o.close()}catch{}}}}catch{this.onFail({label:"连接失败"})}}async send(o){await this.serialPortWriter.write(new Uint8Array(o))}_callback(o){for(;!o.isEmpty();){const r=[],{CRPC_300SDKPACKAGEHEADFIRST:c}=this.contrastParams;try{if(o.getFirstItem()===c)this.handleQueue.clear(),this.handlePack(o,r);else{for(;!o.isEmpty()&&o.getFirstItem()!==c;)this.handleQueue.joinQueue([o.outQueue()]);this.handlePack(this.handleQueue,r),this.handleQueue.clear()}}catch(x){if(x instanceof V)this.handleQueue.clear(),this.handleQueue.joinQueue(r);else throw x}}}}function ie(S){const{packConfig:o}=L(),{CRPC_300SDKPACKAGEHEADFIRST:r}=o.token,{serialPorAnalyzer:c}=N(),x=ae({status:"",text:"",data:{success:{value:0,label:"连接成功"},fail:{value:1,label:"连接失败"},disconnect:{value:2,label:"断开连接"}}}),f=new ue({contrastParams:{CRPC_300SDKPACKAGEHEADFIRST:r},handlePack:(u,l)=>{c(u,l)},onConnect:()=>{m(x.value.data.success.value)},onDisconnect:()=>{m(x.value.data.disconnect.value)},onFail:()=>{m(x.value.data.fail.value)}});function h(){f.connect()}function _(u){f.send(u)}function m(u){const l=x.value.data;x.value.status=u;for(const d in l)if(Object.hasOwnProperty.call(l,d)){const P=l[d];P.value===u&&(x.value.text=P.label)}}return{serialPortStatus:x,serialPortInit:h,serialPortSendMsg:_}}const de={class:"sl-layout-content"},fe={__name:"index",setup(S){const{serialPortStatus:o,serialPortInit:r,serialPortSendMsg:c}=ie(),{setDeviceTime:x,getDeviceInfomation:f,getTemperatureStatus:h,getSpo2Status:_,startBloodPressureMeasurement:m,stopBloodPressureMeasurement:u,slCheckPackageCRCWithData:l}=N();function d(){c(f())}function P(){c(m())}function k(){c(u())}function b(){c(h())}function K(){c(_())}return(R,p)=>{const v=se;return I(),E("div",de,[ce(v,null,{extra:H(()=>[i("div",null,[y(o).status!==0?(I(),E("button",{key:0,onClick:p[0]||(p[0]=(...D)=>y(r)&&y(r)(...D))},"连接")):xe("",!0),i("p",null,re(y(o).text),1)])]),default:H(()=>[i("div",{class:"card-extra"},[i("div",null,[i("button",{onClick:d},"设备信息")]),i("div",null,[i("button",{onClick:P},"开始测量血压")]),i("div",null,[i("button",{onClick:k},"停止测量血压")]),i("div",null,[i("button",{onClick:b},"体温设备状态查询")]),i("div",null,[i("button",{onClick:K},"血氧设备状态查询")])])]),_:1})])}}},ke=le(fe,[["__scopeId","data-v-fe638474"]]);export{ke as default};
